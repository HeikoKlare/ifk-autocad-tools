//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AutoCADTools.PrintLayout {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class LocalData {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LocalData() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AutoCADTools.PrintLayout.LocalData", typeof(LocalData).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Printers have not been initialized yet. Please try again in a few seconds. ähnelt.
        /// </summary>
        internal static string AllPrintersNotInitializedMessage {
            get {
                return ResourceManager.GetString("AllPrintersNotInitializedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The specified default printer is not found. ähnelt.
        /// </summary>
        internal static string DefaultPrinterInvalid {
            get {
                return ResourceManager.GetString("DefaultPrinterInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occured while finding the drawing area. Please create a new one and delete the old one if existing. ähnelt.
        /// </summary>
        internal static string DrawingAreaFindErrorMessage {
            get {
                return ResourceManager.GetString("DrawingAreaFindErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Drawing Area Error ähnelt.
        /// </summary>
        internal static string DrawingAreaFindErrorTitle {
            get {
                return ResourceManager.GetString("DrawingAreaFindErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Insertion point ähnelt.
        /// </summary>
        internal static string DrawingAreaInsertionText {
            get {
                return ResourceManager.GetString("DrawingAreaInsertionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Target point ähnelt.
        /// </summary>
        internal static string DrawingAreaModificationText {
            get {
                return ResourceManager.GetString("DrawingAreaModificationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The layout name is already used. Override? ähnelt.
        /// </summary>
        internal static string DuplicateLayoutNameText {
            get {
                return ResourceManager.GetString("DuplicateLayoutNameText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Duplicate Layout Name ähnelt.
        /// </summary>
        internal static string DuplicateLayoutNameTitle {
            get {
                return ResourceManager.GetString("DuplicateLayoutNameTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die End point ähnelt.
        /// </summary>
        internal static string ExtractEndPointText {
            get {
                return ResourceManager.GetString("ExtractEndPointText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start point ähnelt.
        /// </summary>
        internal static string ExtractStartPointText {
            get {
                return ResourceManager.GetString("ExtractStartPointText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Layoutname must not be empty. ähnelt.
        /// </summary>
        internal static string LayoutNameEmptyError {
            get {
                return ResourceManager.GetString("LayoutNameEmptyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No drawing area detected. ähnelt.
        /// </summary>
        internal static string NoDrawingAreaMessage {
            get {
                return ResourceManager.GetString("NoDrawingAreaMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is no extract defined yet. ähnelt.
        /// </summary>
        internal static string NoExtractDefinedError {
            get {
                return ResourceManager.GetString("NoExtractDefinedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are no paperformats avaiblable for this printer. ähnelt.
        /// </summary>
        internal static string PaperformatListEmptyError {
            get {
                return ResourceManager.GetString("PaperformatListEmptyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The selected paperformat does not fit the specified extract. ähnelt.
        /// </summary>
        internal static string PaperformatNotFitting {
            get {
                return ResourceManager.GetString("PaperformatNotFitting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A printer with the specified name does not exist:  ähnelt.
        /// </summary>
        internal static string PrinterNameException {
            get {
                return ResourceManager.GetString("PrinterNameException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scale factor must not be empty. ähnelt.
        /// </summary>
        internal static string ScaleEmptyError {
            get {
                return ResourceManager.GetString("ScaleEmptyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scale factor must be a number. ähnelt.
        /// </summary>
        internal static string ScaleNoNumberError {
            get {
                return ResourceManager.GetString("ScaleNoNumberError", resourceCulture);
            }
        }
    }
}
